{{! Using layout }}
{{!-- {{#section 'head'}} Additional head tags for Add Book {{/section}} --}}

  <style>
    .cards-container {
      display: flex;
      justify-content: center;
    }

    .book-card .actions {
      justify-content: center;
    }
  </style>
  <section>
    <div class="content">
      <div class="cards-container products">
        <article class="book-card linked">
          <div style="display: none;" class="badge" aria-label="Main resource">Main</div>
          <a id="bookurl" target="_blank">
            <img id="bookcover" src="/Assets/Images/BookCovers/BookCover_Template.png" loading="lazy">
          </a>
          <div class="Bdetails">
            <h3 id="bookname"></h3>
            <p id="bookdesciption"></p>
          </div>
          <div class="actions">
            <a id="bookurl1" target="_blank" class="btn btn-save" aria-label="View All">
              <i class="fas fa-eye" aria-hidden="true"></i> View
            </a>
          </div>
        </article>
      </div>
      <div class="profile-container">
        <div class="profile-header">
          <h2>Add Book</h2>
        </div>
        <div class="profile-details">
          <form class="profile-form" id="addBookForm">

            <div class="form-group">
              <label for="name">
                <strong>Book Name:</strong>
              </label>
              <input type="text" id="name" name="name" value="book name" required />
            </div>

            <div class="form-group">
              <label for="category">
                <strong>Category:</strong>
              </label>
              <select id="category" name="category" required>
                <option value="All">All</option>
                <option value="CourseBooks" selected>CourseBooks</option>
                <option value="LabManuals">LabManuals</option>
                <option value="Other">Other</option>
              </select>
            </div>

            <div class="form-group">
              <label for="description">
                <strong>Description:</strong>
              </label>
              <input id="description" name="description" value="aurthor name or other description" required />
            </div>

            <div class="form-group">
              <label for="imageURL">
                <strong>Image URL:</strong>
              </label>
              <input id="imageURL" name="imageURL" value="/Assets/Images/BookCovers/BookCover_Template.png" required
                {{#unless (eq role "SuperAdmin" )}}readonly title="You Don't Have Permission To Change Img URL"
                {{/unless}} />
            </div>

            <div class="form-group">
              <label for="link">
                <strong>Book Url:</strong>
              </label>
              <input type="url" id="link" name="link" value="https://drive.google.com/file/d/../view" required />
            </div>

            <div class="form-group">
              <label for="semester">
                <strong>Semester:</strong>
              </label>
              <select id="semester" name="semester" required>
                <option value="Semester1">Semester1</option>
                <option value="Semester2">Semester2</option>
                <option value="Semester3" selected>Semester3</option>
                <option value="Semester4">Semester4</option>
                <option value="Semester5">Semester5</option>
                <option value="Semester6">Semester6</option>
                <option value="Semester7">Semester7</option>
                <option value="Semester8">Semester8</option>
              </select>
            </div>

            <label for="main">Main:</label>
            <select id="main" name="main" required>
              <option value="true">True</option>
              <option value="false" selected>False</option>
            </select>

            <button class="buttons full">Add Book</button>
          </form>
        </div>
      </div>
      <script>
        function updateBookCard() {
          document.getElementById("bookname").textContent = document.getElementById("name").value;
          document.getElementById("bookdesciption").textContent = document.getElementById("description").value;
          document.getElementById("bookcover").src = document.getElementById("imageURL").value;
          const url = document.getElementById("link").value;
          document.getElementById("bookurl").href = url;
          document.getElementById("bookurl1").href = url;

          // Show/hide Main badge based on "main" value
          const mainValue = document.getElementById("main").value;
          const badge = document.querySelector(".book-card .badge");
          if (badge) {
            badge.style.display = mainValue === "true" ? "block" : "none";
          }
        }

        const fields = ["name", "description", "imageURL", "link", "main"];
        fields.forEach(id => {
          document.getElementById(id).addEventListener("input", updateBookCard);
          document.getElementById(id).addEventListener("change", updateBookCard);
        });

        // Initialize card with default values
        updateBookCard();
      </script>
      <script>
        document.getElementById("addBookForm").addEventListener("submit", async (e) => {
          e.preventDefault();

          const submitButton = e.target.querySelector("button");
          submitButton.disabled = true;
          submitButton.textContent = "Adding...";

          const formData = {
            name: document.getElementById("name").value,
            category: document.getElementById("category").value,
            description: document.getElementById("description").value,
            imageURL: document.getElementById("imageURL").value,
            link: document.getElementById("link").value,
            semester: document.getElementById("semester").value,
            main: document.getElementById("main").value,
          };

          try {
            const response = await fetch("/api/admin/Unilib/Book/Add", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (response.ok) {
              alert(result.message);
            } else {
              alert(result.error);
            }
          } catch (error) {
            console.error("Error adding book:", error);
            alert("Failed to add book");
          } finally {
            submitButton.disabled = false;
            submitButton.textContent = "Add Book";
          }
        });
      </script>
    </div>
  </section>

{{!-- {{#section 'scripts'}} AddBook page extra scripts if needed {{/section}} --}}