{{! Using layout }}
{{#section 'head'}}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
{{/section}}

<div class="dashboard-container">
  <div class="dashboard-header">
    <div class="dashboard-title">
      <h1>Edit Book</h1>
      <p>Modify the details of the selected book</p>
    </div>
    <div class="dashboard-actions">
      <a href="/dashboard" class="action-button back-button">
        <i class="fas fa-arrow-left"></i> Back to Dashboard
      </a>
    </div>
  </div>

  <div class="add-book-content">
    <div class="book-preview-section">
      <div class="cards-container products">
        <article class="book-card linked" id="7">
          <a id="bookurl" href="{{book.link}}" target="_blank" aria-label="All">
            <img id="bookcover" src="{{book.imageURL}}" alt="Cover of {{book.name}}" loading="lazy">
          </a>
          <div class="Bdetails">
            <h3 id="bookname" data-org="{{book.name}}">{{book.name}}</h3>
            <p id="bookdesciption" data-org="{{book.description}}">{{book.description}}</p>
          </div>
          <div class="actions">
            <a id="bookurl1" href="{{book.link}}" target="_blank" class="btn btn-save" aria-label="View All">
              <i class="fas fa-eye" aria-hidden="true"></i> View
            </a>
          </div>
        </article>
      </div>
    </div>

    <div class="form-section">
      <div class="profile-container">
        <div class="profile-header">
          <h2>Book Details</h2>
        </div>
        <div class="profile-details">
          <form class="profile-form" id="addBookForm">

            <div class="form-group">
              <label for="name">
                <strong>Book Name:</strong>
              </label>
              <input type="text" value="{{book.name}}" data-org="{{book.name}}" id="name" name="name" required />
            </div>

            <div class="form-group">
              <label for="category">
                <strong>Category:</strong>
              </label>
              <select id="category" name="category" data-org="{{book.category}}" required>
                <option value="All" {{#if (eq book.category "All" )}}selected{{/if}}>All</option>
                <option value="CourseBooks" {{#if (eq book.category "CourseBooks" )}}selected{{/if}}>CourseBooks</option>
                <option value="LabManuals" {{#if (eq book.category "LabManuals" )}}selected{{/if}}>LabManuals</option>
                <option value="Other" {{#if (eq book.category "Other" )}}selected{{/if}}>Other</option>
              </select>
            </div>

            <div class="form-group">
              <label for="description">
                <strong>Description:</strong>
              </label>
              <input id="description" value="{{book.description}}" data-org="{{book.description}}" name="description" required />
            </div>

            <div class="form-group">
              <label for="imageURL">
                <strong>Image URL:</strong>
              </label>
              <div style="display: flex; gap: 10px;">
                <input id="imageURL" value="{{book.imageURL}}" data-org="{{book.imageURL}}" name="imageURL" required {{#unless (eq role "SuperAdmin" )}}readonly title="You Don't Have Permission To Change Img URL" {{/unless}} />
              </div>
            </div>

            <div class="form-group">
              <label for="link">
                <strong>Book Url:</strong>
              </label>
              <input type="url" value="{{book.link}}" data-org="{{book.link}}" id="link" name="link" required />
            </div>

            <div class="form-group">
              <label for="semester">
                <strong>Semester:</strong>
              </label>
              <select id="semester" name="semester" data-org="{{book.semester}}" required>
                <option value="Semester1" {{#if (eq book.semester "Semester1" )}}selected{{/if}}>Semester1</option>
                <option value="Semester2" {{#if (eq book.semester "Semester2" )}}selected{{/if}}>Semester2</option>
                <option value="Semester3" {{#if (eq book.semester "Semester3" )}}selected{{/if}}>Semester3</option>
                <option value="Semester4" {{#if (eq book.semester "Semester4" )}}selected{{/if}}>Semester4</option>
                <option value="Semester5" {{#if (eq book.semester "Semester5" )}}selected{{/if}}>Semester5</option>
                <option value="Semester6" {{#if (eq book.semester "Semester6" )}}selected{{/if}}>Semester6</option>
                <option value="Semester7" {{#if (eq book.semester "Semester7" )}}selected{{/if}}>Semester7</option>
                <option value="Semester8" {{#if (eq book.semester "Semester8" )}}selected{{/if}}>Semester8</option>
              </select>
            </div>

            <div class="form-group">
              <label for="main">
                <strong>Main:</strong>
              </label>
              <select id="main" name="main" data-org="{{book.main}}" required>
                <option value="true" {{#if (eq book.main "true" )}}selected{{/if}}>True</option>
                <option value="false" {{#if (eq book.main "false" )}}selected{{/if}}>False</option>
              </select>
            </div>

            <button class="buttons full">Edit Book</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>

    function updateBookCard() {
        document.getElementById("bookname").textContent = document.getElementById("name").value;
        document.getElementById("bookdesciption").textContent = document.getElementById("description").value;
        document.getElementById("bookcover").src = document.getElementById("imageURL").value;
        const url = document.getElementById("link").value;
        document.getElementById("bookurl").href = url;
        document.getElementById("bookurl1").href = url;

        // Show/hide Main badge based on "main" value
        const mainValue = document.getElementById("main").value;
        const badge = document.querySelector(".book-card .book-badge");
        if (badge) {
            badge.style.display = mainValue === "true" ? "block" : "none";
        }
    }

    const fields = ["name", "description", "imageURL", "link", "main"];
    fields.forEach(id => {
        document.getElementById(id).addEventListener("input", updateBookCard);
        document.getElementById(id).addEventListener("change", updateBookCard);
    });

    // Initialize card with default values
    updateBookCard();
</script>
<script>
    document.getElementById("addBookForm").addEventListener("submit", async (e) => {
        e.preventDefault();

        const submitButton = e.target.querySelector("button");
        submitButton.disabled = true;
        submitButton.textContent = "Editing...";

        const formData = {
            name: document.getElementById("name").value,
            category: document.getElementById("category").value,
            description: document.getElementById("description").value,
            imageURL: document.getElementById("imageURL").value,
            link: document.getElementById("link").value,
            semester: document.getElementById("semester").value,
            main: document.getElementById("main").value,
        };

        try {
            const response = await fetch("/api/admin/Unilib/Book/Edit/{{id}}", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (response.ok) {
                alert(result.message);
                window.location.reload();
            } else {
                alert(result.error);
            }
        } catch (error) {
            console.error("Error editing book:", error);
            alert("Failed to edit book");
        } finally {
            submitButton.disabled = false;
            submitButton.textContent = "Edit Book";
        }
    });
</script>
{{!-- {{#section 'scripts'}} Extra page scripts for Edit Book if needed {{/section}} --}}